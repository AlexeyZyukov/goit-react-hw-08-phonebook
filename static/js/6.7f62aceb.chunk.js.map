{"version":3,"sources":["views/RegisterPageView/RegisterPageView.module.css","views/RegisterPageView/RegisterPageView.js"],"names":["module","exports","RegisterPageViewView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","style","textAlign","marginTop","onSubmit","e","preventDefault","authOperations","register","className","s","form","autoComplete","label","type","placeholder","onChange","required","autoFocus","pattern","title","input","button"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,MAAQ,gCAAgC,OAAS,mC,yICKlI,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,KAuBzB,OACE,qCACE,oBAAIC,MAAO,CAAEC,UAAW,SAAUC,UAAW,IAA7C,2CAGA,uBACA,uBAAMC,SAxBW,SAAAC,GACnBA,EAAEC,iBACFjB,EACEkB,IAAeC,SAAS,CACtBhB,OACAE,QACAE,cAOJH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASoBY,UAAWC,IAAEC,KAAMC,aAAa,MAA9D,UACE,wBAAOH,UAAWC,IAAEG,MAApB,iBAEE,uBACEC,KAAK,OACLtB,KAAK,OACLuB,YAAY,kBACZf,MAAOR,EACPwB,SAAUlB,EACVmB,UAAQ,EACRC,UAAU,KACVC,QAAQ,yHACRC,MAAM,kcACNX,UAAWC,IAAEW,WAIjB,wBAAOZ,UAAWC,IAAEG,MAApB,mBAEE,uBACEC,KAAK,QACLtB,KAAK,QACLuB,YAAY,eACZf,MAAON,EACPsB,SAAUlB,EACVmB,UAAQ,EACRR,UAAWC,IAAEW,WAIjB,wBAAOZ,UAAWC,IAAEG,MAApB,qBAEE,uBACEC,KAAK,WACLtB,KAAK,WACLuB,YAAY,kBACZf,MAAOJ,EACPoB,SAAUlB,EACVmB,UAAQ,EACRR,UAAWC,IAAEW,WAIjB,wBAAQP,KAAK,SAASL,UAAWC,IAAEY,OAAnC","file":"static/js/6.7f62aceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterPageView_form__1_aT9\",\"label\":\"RegisterPageView_label__3u9cc\",\"input\":\"RegisterPageView_input__32Whd\",\"button\":\"RegisterPageView_button__11ug6\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport s from './RegisterPageView.module.css';\n\nexport default function RegisterPageViewView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(\n      authOperations.register({\n        name,\n        email,\n        password,\n      }),\n    );\n    reset();\n  };\n\n  function reset() {\n    setName('');\n    setEmail('');\n    setPassword('');\n  }\n\n  return (\n    <>\n      <h2 style={{ textAlign: 'center', marginTop: 20 }}>\n        Register to create an account\n      </h2>\n      <br />\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"enter your name\"\n            value={name}\n            onChange={handleChange}\n            required\n            autoFocus=\"on\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            className={s.input}\n          />\n        </label>\n\n        <label className={s.label}>\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"enter e-mail\"\n            value={email}\n            onChange={handleChange}\n            required\n            className={s.input}\n          />\n        </label>\n\n        <label className={s.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"create password\"\n            value={password}\n            onChange={handleChange}\n            required\n            className={s.input}\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          Register\n        </button>\n      </form>\n    </>\n  );\n}\n"],"sourceRoot":""}