{"version":3,"sources":["redux/auth/auth-operations.js","components/Container/Container.js","components/Navigation/Navigation.module.css","components/UserMenu/userMenu.module.css","components/AuthMenu/AuthMenu.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-reducer.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","components/PublicRoute.js","components/PrivateRoute.js","components/Navigation/Navigation.js","components/AuthMenu/AuthMenu.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Loader/Loader.js","App.js","index.js","redux/contacts/contacts-actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","console","log","get","operations","Container","children","className","s","container","module","exports","items","createReducer","fetchContactSuccess","payload","addContactSuccess","map","item","name","includes","alert","delContactSuccess","filter","id","filterContacts","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","delContactRequest","delContactError","combineReducers","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","actions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PublicRoute","restricted","redirectTo","useSelector","to","PrivateRoute","Navigation","nav","exact","link","AuthMenu","UserMenu","dispatch","useDispatch","userMenu","userMenuTitle","button","type","onClick","AppBar","barHeader","Spinner","loaderWrapper","color","height","width","timeout","visible","ariaLabel","Component","HomePageView","lazy","RegisterPageView","LoginPageView","ContactsView","App","useEffect","fallback","path","element","ReactDOM","render","StrictMode","document","querySelector","createAction","delContacts"],"mappings":"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","file":"static/js/main.6fc1f72d.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('user/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('user/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('user/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\nexport default operations;\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3CzRu\",\"link\":\"Navigation_link__3DyUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenuTitle\":\"userMenu_userMenuTitle__6qshL\",\"userMenu\":\"userMenu_userMenu__230HB\",\"button\":\"userMenu_button__2e4oY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthMenu_link__2HiCh\",\"activeLink\":\"AuthMenu_activeLink__3P4Du\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3PBT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barHeader\":\"AppBar_barHeader__1O8YY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__2r-H9\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  delContactRequest,\r\n  delContactSuccess,\r\n  delContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterContacts,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    let namesArray = state.map(item => item.name);\r\n    if (!namesArray.includes(payload.name)) {\r\n      return [...state, payload];\r\n    } else {\r\n      alert(`${payload.name} is already in contacts!`);\r\n      return state;\r\n    }\r\n  },\r\n  [delContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [delContactRequest]: () => true,\r\n  [delContactSuccess]: () => false,\r\n  [delContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: {\n    name: null,\n    email: null,\n  },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, actions) {\n      state.user = actions.payload.user;\n      state.token = actions.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, actions) {\n      state.user = actions.payload.user;\n      state.token = actions.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, actions) {\n      state.user = {\n        name: '',\n        email: '',\n      };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, actions) {\n      state.user = actions.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({ restricted = false, redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n\n  return !redirect ? <Outlet /> : <Navigate to={redirectTo} />;\n}\n","import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({ redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return isLoggedIn ? <Outlet /> : <Navigate to={redirectTo} />;\n}\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav className={s.nav}>\n      <NavLink to=\"/\" exact=\"true\" className={s.link}>\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink to=\"/contacts\" exact=\"true\" className={s.link}>\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthMenu.module.css';\n\nexport default function AuthMenu() {\n  return (\n    <div>\n      <NavLink\n        exact=\"true\"\n        to=\"/register\"\n        className={s.link}\n        // activeClassName={s.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        exact=\"true\"\n        to=\"/login\"\n        className={s.link}\n        // activeClassName={s.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport s from './userMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div className={s.userMenu}>\n      <span className={s.userMenuTitle}>Welcome, {name}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport Navigation from '../Navigation/Navigation';\nimport Container from '../Container/Container';\nimport AuthMenu from '../AuthMenu/AuthMenu';\nimport UserMenu from '../UserMenu/UserMenu';\nimport s from './AppBar.module.css';\n// import { NavLink } from 'react-router-dom';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Container>\n      <div className={s.barHeader}>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthMenu />}\n      </div>\n    </Container>\n  );\n}\n","import { Component } from 'react';\nimport { BallTriangle } from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className={s.loaderWrapper}>\n        <BallTriangle\n          // type=\"BallTriangle\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n          visible={true}\n          ariaLabel=\"loading\"\n        />\n      </div>\n    );\n  }\n}\n","import { Routes, Route } from 'react-router-dom';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from './redux/auth';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport Spinner from './components/Loader/Loader';\r\nimport Container from './components/Container/Container';\r\n\r\nconst HomePageView = lazy(() => import('./views/HomePageView/HomePageView'));\r\nconst RegisterPageView = lazy(() => import('./views/RegisterPageView/RegisterPageView'));\r\nconst LoginPageView = lazy(() => import('./views/LoginPageView/LoginPageView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(authOperations.fetchCurrentUser()), [dispatch]);\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<Spinner />}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<PublicRoute />}>\r\n            <Route path=\"/\" element={<HomePageView />} />\r\n          </Route>\r\n          <Route\r\n            path=\"/register\"\r\n            element={<PublicRoute restricted redirectTo=\"/contacts\" />}\r\n          >\r\n            <Route path=\"/register\" element={<RegisterPageView />} />\r\n          </Route>\r\n          <Route\r\n            path=\"/login\"\r\n            element={<PublicRoute restricted redirectTo=\"/contacts\" />}\r\n          >\r\n            <Route path=\"/login\" element={<LoginPageView />} />\r\n          </Route>\r\n          <Route element={<PrivateRoute path=\"/contacts\" redirectTo=\"/\" />}>\r\n            <Route path=\"/contacts\" element={<ContactsView />} />\r\n          </Route>\r\n        </Routes>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const asyncGetContacts = createAction('contacts/get');\r\n// export default { asyncGetContacts };\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const delContactRequest = createAction('contacts/delContactRequest');\r\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\r\nexport const delContactError = createAction('contacts/delContactError');\r\n\r\nexport const delContacts = createAction('contacts/DELETE');\r\nexport const filterContacts = createAction('contacts/FILTER');\r\n"],"sourceRoot":""}