{"version":3,"sources":["components/Form/form.module.css","views/ContactsView/contactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["module","exports","fetchContacts","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","addContact","name","number","contacts","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","delContact","contactsId","delContactRequest","delete","delContactSuccess","delContactError","getContacts","state","items","getFilter","filter","getLoading","loading","filterContacts","allContacts","contact","toLocaleLowerCase","includes","Form","useState","setName","setNumber","useDispatch","handleChange","evt","currentTarget","value","className","styles","form","onSubmit","preventDefault","contactsOperations","formLabel","inputName","formInput","type","pattern","title","onChange","required","Filter","useSelector","contactsSelectors","event","contactsActions","connect","useEffect","Container","contactList","map","id","contactListItem","onClick","onDelete"],"mappings":"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","file":"static/js/3.9ff17b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__296xO\",\"formInput\":\"form_formInput__1boSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactsView_contactList__19B9a\",\"contactListItem\":\"contactsView_contactListItem__2bOAt\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contacts = { name, number };\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contacts)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const delContact = contactsId => dispatch => {\n  dispatch(delContactRequest());\n\n  axios\n    .delete(`/contacts/${contactsId}`)\n    .then(() => dispatch(delContactSuccess(contactsId)))\n    .catch(error => dispatch(delContactError(error)));\n};\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const filterContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport styles from './form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number));\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onSubmit({\r\n      name,\r\n      number,\r\n    });\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.formLabel}>\r\n        <p className={styles.inputName}>Name </p>\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.formLabel}>\r\n        <p className={styles.inputName}> Number</p>\r\n        <input\r\n          className={styles.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"filterTitle\">Find contacts by name</p>\r\n      <input\r\n        className=\"formInput\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(contactsActions.filterContacts(event.currentTarget.value))\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport Form from '../../components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport styles from './contactsView.module.css';\nimport Container from '../../components/Container/Container';\n\nfunction Contacts() {\n  const contacts = useSelector(contactsSelectors.filterContacts);\n  const dispatch = useDispatch();\n  const onDelete = id => dispatch(contactsOperations.delContact(id));\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <Form />\n      <Filter />\n      <ul className={styles.contactList}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <li className={styles.contactListItem} key={id}>\n              <p>{name}</p>\n              <p>{number}</p>\n              <button className=\"button\" id={id} onClick={() => onDelete(id)}>\n                Delete contact\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}