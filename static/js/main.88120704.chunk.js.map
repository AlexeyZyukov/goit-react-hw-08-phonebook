{"version":3,"sources":["redux/auth/auth-operations.js","components/Navigation/Navigation.module.css","components/AuthMenu/AuthMenu.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/contacts/contacts-reducer.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthMenu/AuthMenu.js","components/AppBar/AppBar.js","components/Loader/Loader.js","App.js","index.js","redux/contacts/contacts-actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","console","log","get","operations","module","exports","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","name","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","actions","payload","action","items","createReducer","fetchContactSuccess","addContactSuccess","map","item","includes","alert","delContactSuccess","filter","id","filterContacts","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","delContactRequest","delContactError","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PrivateRoute","redirectTo","useSelector","to","PublicRoute","restricted","Navigation","className","s","nav","exact","link","UserMenu","dispatch","useDispatch","type","onClick","AuthMenu","AppBar","header","barHeader","Spinner","color","height","width","timeout","visible","Component","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","element","ReactDOM","render","StrictMode","document","getElementById","createAction"],"mappings":"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","file":"static/js/main.88120704.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токен не получен');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\nconst operations = {\n  register,\n  logIn,\n  logOut,\n  fetchCurrentUser,\n};\nexport default operations;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3CzRu\",\"link\":\"Navigation_link__3DyUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthMenu_link__2HiCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barHeader\":\"AppBar_barHeader__1O8YY\",\"header\":\"AppBar_header__1fNAj\"};","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, actions) {\n      state.user = actions.payload.user;\n      state.token = actions.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, actions) {\n      state.user = actions.payload.user;\n      state.token = actions.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, actions) {\n      state.user = { name: '', email: '' };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\nexport default authSlice.reducer;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    let namesArray = state.map(item => item.name);\n    if (!namesArray.includes(payload.name)) {\n      return [...state, payload];\n    } else {\n      alert(`${payload.name} is already in contacts!`);\n      return state;\n    }\n  },\n  [delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({ redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return isLoggedIn ? <Outlet /> : <Navigate to={redirectTo} />;\n}\n","import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({ restricted = false, redirectTo = '/' }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const redirect = isLoggedIn && restricted;\n\n  return !redirect ? <Outlet /> : <Navigate to={redirectTo} />;\n}\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav className={s.nav}>\n      <NavLink to=\"/\" exact=\"true\" className={s.link}>\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink to=\"/contacts\" exact=\"true\" className={s.link}>\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport './UserMenu.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div className=\"userMenu\">\n      <span className=\"userMenu__title\">Welcome, {name}</span>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport s from './AuthMenu.module.css';\n\nexport default function AuthMenu() {\n  return (\n    <div>\n      <NavLink to=\"/register\" exact=\"true\" className={s.link}>\n        Registration\n      </NavLink>\n\n      <NavLink to=\"/login\" exact=\"true\" className={s.link}>\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthMenu from '../AuthMenu/AuthMenu';\nimport s from './AppBar.module.css';\n\nconst AppBar = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={s.header}>\n      <div className={s.barHeader}>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthMenu />}\n      </div>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { Component } from 'react';\nimport { BallTriangle } from 'react-loader-spinner';\n\nimport './Loader.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className=\"loader-wrapper\">\n        <BallTriangle\n          type=\"BallTriangle\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n          visible={true}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { authOperations } from './redux/auth';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport AppBar from './components/AppBar/AppBar.js';\nimport Spinner from './components/Loader/Loader.js';\n\nconst HomeView = lazy(() => import('./view/HomeView/HomeView'));\nconst RegisterView = lazy(() => import('./view/RegisterView/RegisterView'));\nconst LoginView = lazy(() => import('./view/LoginView/LoginView'));\nconst ContactsView = lazy(() => import('./view/ContactsView/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(authOperations.fetchCurrentUser()), [dispatch]);\n  return (\n    <div>\n      <AppBar />\n      <Suspense fallback={<Spinner />}>\n        <Routes>\n          <Route path=\"/\" element={<PublicRoute />}>\n            <Route path=\"/\" element={<HomeView />} />\n          </Route>\n          <Route\n            path=\"/register\"\n            element={<PublicRoute restricted redirectTo=\"/contacts\" />}\n          >\n            <Route path=\"/register\" element={<RegisterView />} />\n          </Route>\n          <Route\n            path=\"/login\"\n            element={<PublicRoute restricted redirectTo=\"/contacts\" />}\n          >\n            <Route path=\"/login\" element={<LoginView />} />\n          </Route>\n          <Route element={<PrivateRoute path=\"/contacts\" redirectTo=\"/\" />}>\n            <Route path=\"/contacts\" element={<ContactsView />} />\n          </Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst delContactRequest = createAction('contacts/delContactRequest');\nconst delContactSuccess = createAction('contacts/delContactSuccess');\nconst delContactError = createAction('contacts/delContactError');\n\nconst delContacts = createAction('contacts/DELETE');\nconst filterContacts = createAction('contacts/FILTER');\n\nexport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  delContacts,\n  filterContacts,\n};\n"],"sourceRoot":""}